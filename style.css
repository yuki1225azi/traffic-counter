:root { /* CSS全体で利用する変数を定義するルートセレクタ */
  --start-color: #4CAF50; /* 測定開始ボタン用の緑色を変数として定義 */
  --stop-color: #e53935; /* 測定終了ボタン用の赤色を変数として定義 */
  --disabled-color: #bdbdbd; /* 無効化されたボタン用の灰色を変数として定義 */
  --border-color-analyzing: #e53935; /* 解析中の枠線用の赤色を変数として定義 */
  --border-color-default: #ccc; /* 通常時の枠線用の灰色を変数として定義 */
  --font-color: #333; /* 基本の文字色を変数として定義 */
  --bg-color: #f5f5f5; /* 基本の背景色を変数として定義 */
  --link-blue: #1e88e5; /* リンク用の青色を変数として定義 */
} /* :rootの終了 */

body { /* body要素全体のスタイルを指定 */
  margin: 0; /* body要素の外側の余白をなくす */
  font-family: "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; /* Webページ全体のフォントを指定 */
  font-size: 14px; /* 基本の文字サイズを14pxに設定 */
  background-color: #ffffff; /* 背景色を白に設定 */
  color: var(--font-color); /* 基本の文字色を変数で指定 */
  display: flex; /* Flexboxレイアウトを有効にする */
  justify-content: center; /* Flexboxの子要素を水平方向の中央に配置 */
  align-items: center; /* Flexboxの子要素を垂直方向の中央に配置 */
  height: 100vh; /* bodyの高さを画面の高さと一致させる */
} /* bodyの終了 */

#container { /* 全体を囲むコンテナのスタイルを指定 */
  width: 100%; /* 幅を親要素の100%にする */
  max-width: 500px; /* 最大幅を500pxに制限する */
  padding: 16px; /* 内側の余白を16pxに設定 */
  box-sizing: border-box; /* paddingとborderを幅と高さに含める */
  display: flex; /* Flexboxレイアウトを有効にする */
  flex-direction: column; /* Flexboxの子要素を縦方向に並べる */
  gap: 8px; /* Flexboxの子要素間の間隔を8pxに設定 */
  min-height: 100%; /* 最小の高さを親要素の100%にする */
  overflow-y: auto; /* Y軸方向（縦）にはみ出した場合にスクロールバーを表示 */
} /* #containerの終了 */

#app-title { /* アプリケーションタイトルのスタイルを指定 */
  text-align: center; /* テキストを中央揃えにする */
  font-size: 1em; /* 文字サイズを基本の1倍にする */
  font-weight: bold; /* 文字を太字にする */
  color: #2c3e50; /* 文字色を指定 */
} /* #app-titleの終了 */

#status-indicator { /* 読み込み状態表示エリアのスタイルを指定 */
  text-align: center; /* テキストを中央揃えにする */
  font-size: 0.9em; /* 文字サイズを基本の0.9倍にする */
  font-weight: bold; /* 文字を太字にする */
} /* #status-indicatorの終了 */

#loading-model { /* 「AIモデル読込中...」のテキスト部分のスタイルを指定 */
  display: flex; /* Flexboxレイアウトを有効にする */
  align-items: center; /* Flexboxの子要素を垂直方向の中央に配置 */
  justify-content: center; /* Flexboxの子要素を水平方向の中央に配置 */
  gap: 10px; /* Flexboxの子要素間の間隔を10pxに設定 */
  font-size: 1em; /* 文字サイズを基本の1倍にする */
  font-weight: bold; /* 太字 */
  color: #0056b3; /* 文字色 */
} /* #loading-modelの終了 */

#loading-progress { /* 読み込みプログレスバーのスタイルを指定 */
  width: 80%; /* 幅を親要素の80%にする */
  height: 20px; /* 高さを20pxに設定 */
} /* #loading-progressの終了 */

#video-container { /* ビデオとキャンバスを囲むコンテナのスタイルを指定 */
  position: relative; /* 子要素のposition:absoluteの基準点にする */
  width: 100%; /* 幅を100%にする */
  background: #000; /* 背景色を黒にする */
  border-radius: 8px; /* 角を8pxの半径で丸める */
  overflow: hidden; /* はみ出した子要素を非表示にする */
} /* #video-containerの終了 */
#video { /* video要素のスタイルを指定 */
  display: block; /* ブロック要素として扱う */
  width: 100%; /* 幅を100%にする */
  height: auto; /* 高さは自動調整する */
} /* #videoの終了 */
#canvas { /* canvas要素のスタイルを指定 */
  display: block; /* ブロック要素として扱う */
  width: 100%; /* 幅を100%にする */
  height: auto; /* 高さは自動調整する */
  border: 3px solid var(--border-color-default); /* 3pxの枠線を設定（通常色） */
  box-sizing: border-box; /* borderを幅と高さに含める */
  transition: border-color 0.3s ease; /* 枠線の色が0.3秒かけて滑らかに変化するように設定 */
  position: absolute; /* 親要素(#video-container)を基準に絶対配置する */
  top: 0; /* 親要素の上端からの位置を0にする */
  left: 0; /* 親要素の左端からの位置を0にする */
  border-radius: 8px; /* 角を8pxの半径で丸める */
} /* #canvasの終了 */
#canvas.analyzing { /* 解析中のcanvas要素のスタイルを指定 */
  border-color: var(--border-color-analyzing); /* 枠線の色を解析中用の色（赤）に変更 */
} /* #canvas.analyzingの終了 */

#main-controls-area { /* メイン操作エリアのスタイルを指定 */
  display: flex; /* Flexboxレイアウトを有効にする */
  flex-direction: row; /* Flexboxの子要素を横方向に並べる */
  justify-content: center; /* Flexboxの子要素を水平方向の中央に配置 */
  align-items: center; /* Flexboxの子要素を垂直方向の中央に配置 */
  gap: 16px; /* Flexboxの子要素間の間隔を16pxに設定 */
  flex-wrap: wrap; /* 子要素がコンテナに収まらない場合に折り返す */
} /* #main-controls-areaの終了 */
#count-display-area { /* 人数表示エリアのスタイルを指定 */
  text-align: center; /* テキストを中央揃えにする */
} /* #count-display-areaの終了 */

#count-display-area p { /* 人数表示エリア内のpタグのスタイル */
  font-size: 1em; /* 文字サイズを基本の1倍にする */
  font-weight: bold; /* 文字を太字にする */
  color: #2c3e50; /* 文字色を指定 */
  margin: 0; /* 外側の余白をなくす */
  display: flex; /* Flexboxレイアウトを有効にする */
  align-items: center; /* 子要素を垂直方向の中央で揃える */
  justify-content: center; /* Flexboxの子要素を水平方向の中央に配置 */
  gap: 8px; /* Flexboxの子要素間の間隔を8pxに設定 */
} /* #count-display-area pの終了 */

#person-count { /* 人数の数字部分のスタイルを指定 */
  font-size: 1.5em; /* 文字サイズを親要素（pタグ）の1.5倍にする */
  line-height: 1; /* 行の高さを文字サイズと合わせる */
  position: relative; /* 位置の微調整を可能にする */
  top: -0.1em; /* 本来の位置から少し上（-0.1em）に移動させる */
} /* #person-countの終了 */

.btn { /* ボタン共通のスタイルを指定 */
  flex: 0 0 auto; /* Flexアイテムのサイズを自動調整しない */
  white-space: nowrap; /* テキストを折り返さない */
  text-align: center; /* テキストを中央揃えにする */
  padding: 5px 10px; /* 内側の余白を上下5px、左右10pxに設定 */
  font-size: 1em; /* 文字サイズを「現在の人数」のテキストと合わせる */
  font-weight: bold; /* 文字を太字にする */
  color: white; /* 文字色を白にする */
  border: none; /* 枠線をなくす */
  border-radius: 8px; /* 角を8pxの半径で丸める */
  cursor: pointer; /* マウスカーソルを指の形（ポインター）にする */
  transition: background-color 0.3s, transform 0.1s, box-shadow 0.2s; /* 複数のプロパティが滑らかに変化するよう設定 */
} /* .btnの終了 */
.btn:hover { /* ボタンにマウスカーソルが乗った時のスタイルを指定 */
  transform: translateY(-1px); /* Y軸方向（上）に1px移動させる */
} /* .btn:hoverの終了 */
.btn:active { /* ボタンがクリックされた瞬間のスタイルを指定 */
  transform: translateY(1px); /* Y軸方向（下）に1px移動させる */
} /* .btn:activeの終了 */
.btn:disabled { /* ボタンが無効な時のスタイルを指定 */
  background-color: var(--disabled-color); /* 背景色を無効色（灰色）にする */
  cursor: not-allowed; /* 禁止カーソルを表示する */
} /* .btn:disabledの終了 */
.btn-green { /* 緑色のボタンスタイルを指定 */
  background-color: var(--start-color); /* 背景色を開始色（緑）にする */
} /* .btn-greenの終了 */
.btn-red { /* 赤色のボタンスタイルを指定 */
  background-color: var(--stop-color); /* 背景色を停止色（赤）にする */
} /* .btn-redの終了 */

#log-display { /* ログ表示エリアのスタイルを指定 */
  max-height: 150px; /* 最大の高さを150pxに制限する */
  overflow-y: auto; /* Y軸方向（縦）にはみ出した場合にスクロールバーを自動で表示 */
  border: 1px solid #ddd; /* 1pxの灰色の枠線を設定 */
  border-radius: 4px; /* 角を4pxの半径で丸める */
} /* #log-displayの終了 */

#log-table { /* ログテーブルのスタイルを指定 */
  width: 100%; /* 幅を100%にする */
  border-collapse: collapse; /* 隣接するセルのボーダーを重ねて表示する */
} /* #log-tableの終了 */

#log-table th { /* ログテーブルのヘッダーセル(th)のスタイル */
  position: sticky; /* スクロール時に指定位置に固定（くっつく）ようにする */
  top: 0; /* スクロールコンテナの上端から0pxの位置に固定する */
  background-color: #666; /* 背景色を濃いグレーに設定 */
  color: white; /* 文字色を白に設定 */
  z-index: 1; /* ヘッダーがスクロール内容の上に表示されるように重なり順を設定 */
  border: 1px solid #ddd; /* 1pxの灰色の枠線を設定 */
  padding: 4px 6px; /* 内側の余白を上下4px、左右6pxに設定 */
  text-align: center; /* テキストを中央揃えにする */
} /* #log-table thの終了 */

#log-table td { /* ログテーブルのデータセル(td)のスタイル */
  border: 1px solid #ddd; /* 1pxの灰色の枠線を設定 */
  padding: 4px 6px; /* 内側の余白を上下4px、左右6pxに設定 */
  text-align: center; /* テキストを中央揃えにする */
} /* #log-table tdの終了 */

#log-table tbody tr:nth-child(odd) { /* ログテーブル本体の奇数行のスタイル */
  background-color: #f9f9f9; /* 背景色を薄い灰色に設定 */
} /* #log-table tbody tr:nth-child(odd)の終了 */
#log-table tbody tr:nth-child(even) { /* ログテーブル本体の偶数行のスタイル */
  background-color: #ffffff; /* 背景色を白に設定 */
} /* #log-table tbody tr:nth-child(even)の終了 */

#toast { /* トースト通知のスタイルを指定 */
  position: fixed; /* 画面に固定表示する */
  bottom: 30px; /* 画面下から30pxの位置に配置 */
  left: 50%; /* 画面左から50%の位置に配置 */
  transform: translateX(-50%); /* X軸方向に-50%移動して完全に中央揃えにする */
  background: rgba(0,0,0,0.7); /* 半透明の黒い背景を設定 */
  color: white; /* 文字色を白にする */
  padding: 10px 20px; /* 内側の余白を上下10px、左右20pxに設定 */
  border-radius: 20px; /* 角を20pxの半径で丸めてカプセル状にする */
  font-size: 0.9em; /* 文字サイズを基本の0.9倍にする */
  z-index: 1000; /* 要素の重なり順を1000に設定（最前面に表示） */
  opacity: 0; /* 初期状態では透明にする */
  transition: opacity 0.5s, bottom 0.5s; /* 透明度と位置が0.5秒かけて滑らかに変化するように設定 */
} /* #toastの終了 */
#toast:not(.hidden) { /* hiddenクラスが付いていない（表示状態の）トーストのスタイル */
  opacity: 1; /* 不透明にする */
  bottom: 50px; /* 画面下から50pxの位置に移動させる */
} /* #toast:not(.hidden)の終了 */
.hidden { /* 要素を非表示にするための汎用クラス */
  display: none; /* 要素を非表示にする */
} /* .hiddenの終了 */
